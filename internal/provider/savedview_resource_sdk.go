// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/epilot-dev/terraform-provider-epilot-saved-view/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SavedViewResourceModel) ToSharedSavedView() *shared.SavedView {
	var name string
	name = r.Name.ValueString()

	sharedVar := new(bool)
	if !r.Shared.IsUnknown() && !r.Shared.IsNull() {
		*sharedVar = r.Shared.ValueBool()
	} else {
		sharedVar = nil
	}
	var slug []string = []string{}
	for _, slugItem := range r.Slug {
		slug = append(slug, slugItem.ValueString())
	}
	var uiConfig interface{}
	_ = json.Unmarshal([]byte(r.UIConfig.ValueString()), &uiConfig)
	out := shared.SavedView{
		Name:     name,
		Shared:   sharedVar,
		Slug:     slug,
		UIConfig: uiConfig,
	}
	return &out
}

func (r *SavedViewResourceModel) RefreshFromSharedSavedViewItem(resp *shared.SavedViewItem) {
	if resp != nil {
		r.CreatedAt = types.StringPointerValue(resp.CreatedAt)
		r.ID = types.StringPointerValue(resp.ID)
		r.Name = types.StringValue(resp.Name)
		r.Shared = types.BoolPointerValue(resp.Shared)
		r.Slug = []types.String{}
		for _, v := range resp.Slug {
			r.Slug = append(r.Slug, types.StringValue(v))
		}
		uiConfigResult, _ := json.Marshal(resp.UIConfig)
		r.UIConfig = types.StringValue(string(uiConfigResult))
		r.UpdatedAt = types.StringPointerValue(resp.UpdatedAt)
	}
}

func (r *SavedViewResourceModel) ToSharedSavedViewItem() *shared.SavedViewItem {
	createdAt := new(string)
	if !r.CreatedAt.IsUnknown() && !r.CreatedAt.IsNull() {
		*createdAt = r.CreatedAt.ValueString()
	} else {
		createdAt = nil
	}
	id := new(string)
	if !r.ID.IsUnknown() && !r.ID.IsNull() {
		*id = r.ID.ValueString()
	} else {
		id = nil
	}
	var name string
	name = r.Name.ValueString()

	sharedVar := new(bool)
	if !r.Shared.IsUnknown() && !r.Shared.IsNull() {
		*sharedVar = r.Shared.ValueBool()
	} else {
		sharedVar = nil
	}
	var slug []string = []string{}
	for _, slugItem := range r.Slug {
		slug = append(slug, slugItem.ValueString())
	}
	var uiConfig interface{}
	_ = json.Unmarshal([]byte(r.UIConfig.ValueString()), &uiConfig)
	updatedAt := new(string)
	if !r.UpdatedAt.IsUnknown() && !r.UpdatedAt.IsNull() {
		*updatedAt = r.UpdatedAt.ValueString()
	} else {
		updatedAt = nil
	}
	out := shared.SavedViewItem{
		CreatedAt: createdAt,
		ID:        id,
		Name:      name,
		Shared:    sharedVar,
		Slug:      slug,
		UIConfig:  uiConfig,
		UpdatedAt: updatedAt,
	}
	return &out
}
